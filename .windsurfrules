# Code Style

- Always prefer simple solutions
- Keep the codebase clean and organized
- When catching errors, use variable names `err` or `error` (not `e`)

# Code Organization

- Break code into multiple files/directories rather than one large file
- Prefer smaller functions over long ones
- Avoid duplicate code by checking for existing similar functionality

# Project Configuration

- JavaScript (not TypeScript)
- ES modules (use import/export, not require)
- Built with Vite, output in 'docs' directory (for GitHub Pages)
- Commands:
  - npm run build: build project
  - npm run start: start project
  - npm run lint: check code
  - npm run lint:fix: fix linting issues

# Documentation & Testing

- Functions require JSDoc for arguments and return values
- Types use JSDoc (in types directory). Check if a type already exists before creating a new one.
- Do not use inline import types; create typedefs at file top
- Jest testing framework (npm run test)
- Unit tests in `__tests__` directory near tested files
- Test files should have a `.test.js` suffix

# Development Practices

- You are careful to only make changes that are requested or you are confident are well understood and related to the change being requested
- Code is formatted with Prettier
- Code is linted with ESLint
- Types are checked with `npm run typecheck`

# Project Specific Rules
